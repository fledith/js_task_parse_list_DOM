{"version":3,"sources":["scripts/main.js"],"names":["li","document","querySelectorAll","Employer","fullName","position","salary","age","name","getEmployer","list","employer","i","length","innerText","dataset","replace","listSorted","sort","a","b","forEach","item","toLocaleString","setSortedList","sortedList","employers","sortedEmployers"],"mappings":";AAAA,aA8CA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCA5CA,IAAMA,EAAKC,SAASC,iBAAiB,MAE/BC,EACJ,SAAYC,EAAAA,EAAUC,EAAUC,EAAQC,GAAK,EAAA,KAAA,GACtCC,KAAAA,KAAOJ,EACPC,KAAAA,SAAWA,EACXC,KAAAA,OAASA,EACTC,KAAAA,IAAMA,GAIf,SAASE,EAAYC,GAGd,IAFCC,IAAAA,EAAW,GAERC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BD,EAASA,EAASE,QAAU,IAAIV,EAASO,EAAKE,GAAGE,UAC/CJ,EAAKE,GAAGG,QAAQV,UACfK,EAAKE,GAAGG,QAAQT,OAAOU,QAAQ,MAAO,IACvCN,EAAKE,GAAGG,QAAQR,KAGbI,OAAAA,EAGT,SAASM,EAAWP,GAKXA,OAJPA,EAAKQ,KAAK,SAACC,EAAGC,GAAMA,OAAAA,EAAEd,OAASa,EAAEb,SAAQe,QAAQ,SAAAC,GAC/CA,EAAKhB,OAAS,IAAMgB,EAAKhB,OAAOiB,mBAG3Bb,EAGT,SAASc,EAAcd,EAAMe,GAC3BA,EAAWJ,QAAQ,SAACV,EAAUC,GAC5BF,EAAKE,GAAGE,UAAYH,EAASH,KAC7BE,EAAKE,GAAGG,QAAQV,SAAWM,EAASN,SACpCK,EAAKE,GAAGG,QAAQT,OAASK,EAASL,OAClCI,EAAKE,GAAGG,QAAQR,IAAMI,EAASJ,MAInC,IAAMmB,EAAYjB,EAAYT,GACxB2B,EAAkBV,EAAWS,GAEnCF,EAAcxB,EAAI2B","file":"main.9153c6cd.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst li = document.querySelectorAll('li');\n\nclass Employer {\n  constructor(fullName, position, salary, age) {\n    this.name = fullName;\n    this.position = position;\n    this.salary = salary;\n    this.age = age;\n  }\n}\n\nfunction getEmployer(list) {\n  const employer = [];\n\n  for (let i = 0; i < list.length; i++) {\n    employer[employer.length] = new Employer(list[i].innerText,\n      list[i].dataset.position,\n      +list[i].dataset.salary.replace(/\\D/g, ''),\n      list[i].dataset.age);\n  }\n\n  return employer;\n}\n\nfunction listSorted(list) {\n  list.sort((a, b) => b.salary - a.salary).forEach(item => {\n    item.salary = '$' + item.salary.toLocaleString();\n  });\n\n  return list;\n}\n\nfunction setSortedList(list, sortedList) {\n  sortedList.forEach((employer, i) => {\n    list[i].innerText = employer.name;\n    list[i].dataset.position = employer.position;\n    list[i].dataset.salary = employer.salary;\n    list[i].dataset.age = employer.age;\n  });\n}\n\nconst employers = getEmployer(li);\nconst sortedEmployers = listSorted(employers);\n\nsetSortedList(li, sortedEmployers);\n"]}